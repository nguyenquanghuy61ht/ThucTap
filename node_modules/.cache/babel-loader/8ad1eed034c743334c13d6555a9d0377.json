{"ast":null,"code":"import _objectSpread from \"D:\\\\Thuctap\\\\client-app-v3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"D:\\\\Thuctap\\\\client-app-v3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Thuctap\\\\client-app-v3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Thuctap\\\\client-app-v3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\Thuctap\\\\client-app-v3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\Thuctap\\\\client-app-v3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\Thuctap\\\\client-app-v3\\\\src\\\\app\\\\views\\\\sessions\\\\ForgotPassword.jsx\";\nimport React, { Component } from \"react\";\nimport ConstantList from \"../../appConfig\";\nimport { Card, Grid, Button } from \"@material-ui/core\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { resetPassword } from \"../../redux/actions/LoginActions\";\n\nvar ForgotPassword = /*#__PURE__*/function (_Component) {\n  _inherits(ForgotPassword, _Component);\n\n  var _super = _createSuper(ForgotPassword);\n\n  function ForgotPassword() {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: \"watson@example.com\"\n    };\n\n    _this.handleChange = function (event) {\n      event.persist();\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleFormSubmit = function () {\n      _this.props.resetPassword(_objectSpread({}, _this.state));\n    };\n\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var email = this.state.email;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"signup flex flex-center w-100 h-100vh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"signup-card position-relative y-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 5,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-32 flex flex-center flex-middle h-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/assets/images/illustrations/dreamer.svg\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 7,\n        md: 7,\n        sm: 7,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-36 h-100 bg-light-gray position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"mb-24 w-100\",\n        variant: \"outlined\",\n        label: \"Email\",\n        onChange: this.handleChange,\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        validators: [\"required\", \"isEmail\"],\n        errorMessages: [\"this field is required\", \"email is not valid\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }\n      }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-16 mr-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 23\n        }\n      }, \"or\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"capitalize\",\n        onClick: function onClick() {\n          return _this2.props.history.push(ConstantList.ROOT_PATH + \"session/signin\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, \"Sign in\")))))))));\n    }\n  }]);\n\n  return ForgotPassword;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    resetPassword: PropTypes.func.isRequired,\n    login: state.login\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  resetPassword: resetPassword\n})(ForgotPassword));","map":{"version":3,"names":["React","Component","ConstantList","Card","Grid","Button","TextValidator","ValidatorForm","connect","PropTypes","withRouter","resetPassword","ForgotPassword","state","email","handleChange","event","persist","setState","target","name","value","handleFormSubmit","props","history","push","ROOT_PATH","mapStateToProps","func","isRequired","login"],"sources":["D:/Thuctap/client-app-v3/src/app/views/sessions/ForgotPassword.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport ConstantList from \"../../appConfig\";\nimport { Card, Grid, Button } from \"@material-ui/core\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { resetPassword } from \"../../redux/actions/LoginActions\";\n\nclass ForgotPassword extends Component {\n  state = {\n    email: \"watson@example.com\",\n  };\n  handleChange = (event) => {\n    event.persist();\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  handleFormSubmit = () => {\n    this.props.resetPassword({ ...this.state });\n  };\n  render() {\n    let { email } = this.state;\n\n    return (\n      <div className=\"signup flex flex-center w-100 h-100vh\">\n        <div className=\"p-8\">\n          <Card className=\"signup-card position-relative y-center\">\n            <Grid container>\n              <Grid item lg={5} md={5} sm={5} xs={12}>\n                <div className=\"p-32 flex flex-center flex-middle h-100\">\n                  <img src=\"/assets/images/illustrations/dreamer.svg\" alt=\"\" />\n                </div>\n              </Grid>\n              <Grid item lg={7} md={7} sm={7} xs={12}>\n                <div className=\"p-36 h-100 bg-light-gray position-relative\">\n                  <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n                    <TextValidator\n                      className=\"mb-24 w-100\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      onChange={this.handleChange}\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      validators={[\"required\", \"isEmail\"]}\n                      errorMessages={[\n                        \"this field is required\",\n                        \"email is not valid\",\n                      ]}\n                    />\n                    <div className=\"flex flex-middle\">\n                      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                        Reset Password\n                      </Button>\n                      <span className=\"ml-16 mr-8\">or</span>\n                      <Button\n                        className=\"capitalize\"\n                        onClick={() =>\n                          this.props.history.push(\n                            ConstantList.ROOT_PATH + \"session/signin\"\n                          )\n                        }\n                      >\n                        Sign in\n                      </Button>\n                    </div>\n                  </ValidatorForm>\n                </div>\n              </Grid>\n            </Grid>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  resetPassword: PropTypes.func.isRequired,\n  login: state.login,\n});\nexport default withRouter(\n  connect(mapStateToProps, { resetPassword })(ForgotPassword)\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}