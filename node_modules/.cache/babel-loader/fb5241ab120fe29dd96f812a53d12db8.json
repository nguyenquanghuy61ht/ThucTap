{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { observable, runInAction } from \"mobx\";\nimport React from \"react\";\nimport { isPlainObject } from \"./utils\";\nexport function useAsObservableSourceInternal(current, usedByLocalStore) {\n  var culprit = usedByLocalStore ? \"useLocalStore\" : \"useAsObservableSource\";\n\n  if (\"production\" !== process.env.NODE_ENV && usedByLocalStore) {\n    var _a = __read(React.useState(current), 1),\n        initialSource = _a[0];\n\n    if (initialSource !== undefined && current === undefined || initialSource === undefined && current !== undefined) {\n      throw new Error(\"make sure you never pass `undefined` to \" + culprit);\n    }\n  }\n\n  if (usedByLocalStore && current === undefined) {\n    return undefined;\n  }\n\n  if (\"production\" !== process.env.NODE_ENV && !isPlainObject(current)) {\n    throw new Error(culprit + \" expects a plain object as \" + (usedByLocalStore ? \"second\" : \"first\") + \" argument\");\n  }\n\n  var _b = __read(React.useState(function () {\n    return observable(current, {}, {\n      deep: false\n    });\n  }), 1),\n      res = _b[0];\n\n  if (\"production\" !== process.env.NODE_ENV && Object.keys(res).length !== Object.keys(current).length) {\n    throw new Error(\"the shape of objects passed to \" + culprit + \" should be stable\");\n  }\n\n  runInAction(function () {\n    Object.assign(res, current);\n  });\n  return res;\n}\nexport function useAsObservableSource(current) {\n  return useAsObservableSourceInternal(current, false);\n}","map":null,"metadata":{},"sourceType":"module"}