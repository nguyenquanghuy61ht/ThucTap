{"ast":null,"code":"import _classCallCheck from \"D:\\\\Thuctap\\\\client-app-v3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Thuctap\\\\client-app-v3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from \"axios\";\nimport localStorageService from \"./localStorageService\";\nimport ConstantList from \"../appConfig\";\nimport UserService from \"../services/UserService\";\nimport history from \"history.js\";\nvar config = {\n  headers: {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    Authorization: \"Basic Y29yZV9jbGllbnQ6c2VjcmV0\"\n  }\n};\n\nvar JwtAuthService = /*#__PURE__*/function () {\n  function JwtAuthService() {\n    var _this = this;\n\n    _classCallCheck(this, JwtAuthService);\n\n    this.user = {\n      userId: \"1\",\n      role: \"ADMIN\",\n      displayName: \"Watson Joyce\",\n      email: \"watsonjoyce@gmail.com\",\n      photoURL: ConstantList.ROOT_PATH + \"assets/images/avatar.jpg\",\n      age: 25,\n      token: \"faslkhfh423oiu4h4kj432rkj23h432u49ufjaklj423h4jkhkjh\"\n    };\n\n    this.loginWithUserNameAndPassword = function (username, password) {\n      var requestBody = \"client_id=core_client&grant_type=password&client_secret=secret\";\n      requestBody = requestBody + \"&username=\" + username + \"&password=\" + password;\n      return axios.post(ConstantList.API_ENPOINT + \"/oauth/token\", requestBody, config).then(function (response) {\n        console.log(response);\n        var tokenExpriredTime = new Date(Date.now() + response.data.expires_in * 1000);\n        localStorageService.setItem(\"tokenExpiredTime\", tokenExpriredTime);\n\n        _this.setSession(response.data.access_token);\n\n        _this.setLoginUser(response.data);\n      });\n    };\n\n    this.loginWithEmailAndPassword = function (email, password) {\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          resolve(_this.user);\n        }, 1000);\n      }).then(function (data) {\n        //console.log(data);\n        _this.setUser(data);\n\n        _this.setSession(data.token);\n\n        return data;\n      });\n    };\n\n    this.loginWithToken = function () {\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          resolve(_this.user);\n        }, 100);\n      }).then(function (data) {\n        _this.setSession(data.token);\n\n        _this.setUser(data);\n\n        return data;\n      });\n    };\n\n    this.logout = function () {\n      if (ConstantList.AUTH_MODE === \"Keycloak\") {\n        UserService.doLogout();\n\n        _this.setSession(null);\n\n        _this.removeUser();\n\n        history.push(ConstantList.HOME_PAGE);\n      } else {\n        _this.setSession(null);\n\n        _this.removeUser();\n\n        history.push(ConstantList.LOGIN_PAGE);\n      }\n    };\n\n    this.setLoginUser = function (data) {\n      var user = {};\n      user.token = data.access_token;\n      user.role = \"ADMIN\";\n      user.age = 25;\n      user.displayName = \"\";\n      user.photoURL = ConstantList.ROOT_PATH + \"assets/images/avatar.jpg\";\n      _this.user = user;\n      localStorageService.setItem(\"auth_user\", user);\n      return user;\n    };\n\n    this.setLoginToken = function (data) {\n      var user = {};\n      user.token = data;\n      user.role = \"ADMIN\";\n      user.age = 25;\n      user.displayName = \"\"; // cần lấy tên user\n\n      user.photoURL = ConstantList.ROOT_PATH + \"assets/images/avatar.jpg\";\n      _this.user = user;\n      localStorageService.setItem(\"auth_user\", user);\n      return user;\n    };\n\n    this.setUser = function (user) {\n      localStorageService.setItem(\"auth_user\", user);\n    };\n\n    this.removeUser = function () {\n      localStorage.removeItem(\"auth_user\");\n    };\n  }\n\n  _createClass(JwtAuthService, [{\n    key: \"setSession\",\n    value: function setSession(token) {\n      if (token) {\n        localStorageService.setItem(\"jwt_token\", token);\n        axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n      } else {\n        localStorage.removeItem(\"jwt_token\");\n        delete axios.defaults.headers.common[\"Authorization\"];\n      }\n    }\n  }]);\n\n  return JwtAuthService;\n}();\n\nexport default new JwtAuthService();","map":{"version":3,"names":["axios","localStorageService","ConstantList","UserService","history","config","headers","Authorization","JwtAuthService","user","userId","role","displayName","email","photoURL","ROOT_PATH","age","token","loginWithUserNameAndPassword","username","password","requestBody","post","API_ENPOINT","then","response","console","log","tokenExpriredTime","Date","now","data","expires_in","setItem","setSession","access_token","setLoginUser","loginWithEmailAndPassword","Promise","resolve","reject","setTimeout","setUser","loginWithToken","logout","AUTH_MODE","doLogout","removeUser","push","HOME_PAGE","LOGIN_PAGE","setLoginToken","localStorage","removeItem","defaults","common"],"sources":["D:/Thuctap/client-app-v3/src/app/services/jwtAuthService.js"],"sourcesContent":["import axios from \"axios\";\nimport localStorageService from \"./localStorageService\";\nimport ConstantList from \"../appConfig\";\nimport UserService from \"../services/UserService\";\nimport history from \"history.js\";\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    Authorization: \"Basic Y29yZV9jbGllbnQ6c2VjcmV0\",\n  },\n};\nclass JwtAuthService {\n  user = {\n    userId: \"1\",\n    role: \"ADMIN\",\n    displayName: \"Watson Joyce\",\n    email: \"watsonjoyce@gmail.com\",\n    photoURL: ConstantList.ROOT_PATH + \"assets/images/avatar.jpg\",\n    age: 25,\n    token: \"faslkhfh423oiu4h4kj432rkj23h432u49ufjaklj423h4jkhkjh\",\n  };\n  loginWithUserNameAndPassword = (username, password) => {\n    let requestBody =\n      \"client_id=core_client&grant_type=password&client_secret=secret\";\n    requestBody =\n      requestBody + \"&username=\" + username + \"&password=\" + password;\n    return axios\n      .post(ConstantList.API_ENPOINT + \"/oauth/token\", requestBody, config)\n      .then((response) => {\n        console.log(response);\n\n        const tokenExpriredTime = new Date(\n          Date.now() + response.data.expires_in * 1000\n        );\n\n        localStorageService.setItem(\"tokenExpiredTime\", tokenExpriredTime);\n\n        this.setSession(response.data.access_token);\n        this.setLoginUser(response.data);\n      });\n  };\n\n  loginWithEmailAndPassword = (email, password) => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(this.user);\n      }, 1000);\n    }).then((data) => {\n      //console.log(data);\n      this.setUser(data);\n      this.setSession(data.token);\n      return data;\n    });\n  };\n\n  loginWithToken = () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(this.user);\n      }, 100);\n    }).then((data) => {\n      this.setSession(data.token);\n      this.setUser(data);\n      return data;\n    });\n  };\n\n  logout = () => {\n    if (ConstantList.AUTH_MODE === \"Keycloak\") {\n      UserService.doLogout();\n      this.setSession(null);\n      this.removeUser();\n      history.push(ConstantList.HOME_PAGE);\n    } else {\n      this.setSession(null);\n      this.removeUser();\n      history.push(ConstantList.LOGIN_PAGE);\n    }\n  };\n\n  setSession(token) {\n    if (token) {\n      localStorageService.setItem(\"jwt_token\", token);\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n    } else {\n      localStorage.removeItem(\"jwt_token\");\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  }\n  setLoginUser = (data) => {\n    let user = {};\n    user.token = data.access_token;\n    user.role = \"ADMIN\";\n    user.age = 25;\n    user.displayName = \"\";\n    user.photoURL = ConstantList.ROOT_PATH + \"assets/images/avatar.jpg\";\n    this.user = user;\n    localStorageService.setItem(\"auth_user\", user);\n    return user;\n  };\n\n  setLoginToken = (data) => {\n    let user = {};\n    user.token = data;\n    user.role = \"ADMIN\";\n    user.age = 25;\n    user.displayName = \"\"; // cần lấy tên user\n    user.photoURL = ConstantList.ROOT_PATH + \"assets/images/avatar.jpg\";\n    this.user = user;\n    localStorageService.setItem(\"auth_user\", user);\n    return user;\n  };\n\n  setUser = (user) => {\n    localStorageService.setItem(\"auth_user\", user);\n  };\n  removeUser = () => {\n    localStorage.removeItem(\"auth_user\");\n  };\n}\n\nexport default new JwtAuthService();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}